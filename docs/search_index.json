[["index.html", "Working with large datasets in R ", " Working with large datasets in R Bin Chi 25/3/2021 "],["introduction.html", "1 Introduction", " 1 Introduction This bookdown contains documents for UCL R user group meeting talk (25/3/2021). It aims to introduces some methods on how to work with large datasets in R. The dataset used in this talk is not allowed to be used commercially. They must be shared on the same terms as the data was originally obtained. By the end of the talk you will have: div.blue { background-color:#e6f0ff; border-radius: 5px; padding: 20px;} Read large CSV files together Tried basic big data munging/wrangling Worked with PostGIS database in R Measured code performance Executed R code in Alteryx "],["recommended-resources.html", "2 Recommended resources 2.1 Resouces for handling big data in R 2.2 Resources for the data.table package 2.3 Resources for measuring R performance 2.4 Resources for PostGIS software 2.5 Resources for Alteryx softwware 2.6 Datasets", " 2 Recommended resources 2.1 Resouces for handling big data in R Handling large data sets in R Notes: Medium sized datasets (&lt; 2 GB):loaded in R ( within memory limit but processing is cumbersome (typically in the 1-2 GB range ) Large files that cannot be loaded in R due to R / OS limitations Large files(2 - 10 GB):process locally using some work around solutions Very Large files( &gt; 10 GB):needs distributed large scale computing. Five ways to handle Big Data in R Notes: Rule of thumb: Data sets that contain up to one million records can easily processed with standard R. Data sets with about one million to one billion records can also be processed in R, but need some additional effort. Data sets that contain more than one billion records need to be analyzed by map reduce algorithms. Efficient data carpentry Big Data Analytics with R R Performance Tuning | Learn Tips to Improve Speed &amp; Memory of R Programs Getting Started With Parallel Programming In R Efficiency in Joining Two Data Frames For large tables in R dplyrs function inner_join() is much faster than merge() BASE R, THE TIDYVERSE, AND DATA.TABLE: A COMPARISON OF R DIALECTS TO WRANGLE YOUR DATA Speed comparison of rbind, bind_rows, and rbindlist 2.2 Resources for the data.table package Data Transformation with data.table : : CHEAT SHEET A data.table and dplyr tour Blazing Fast Data Wrangling With R data.table data.table in R  The Complete Beginners Guide Advanced tips and tricks with data.table Advanced-Data Wrangling In R  4 ## Resouces for dtplyr package Big Data: Wrangling 4.6M Rows with dtplyr GOOGLE 2.3 Resources for measuring R performance Measuring performance Strategies to Speedup R Code R Code Optimizer Strategies to Speedup R Code 2.4 Resources for PostGIS software About PostGIS Install Postgres/PostGIS and get started with spatial SQL Enabling PostGIS PostGIS is an optional extension that must be enabled in each database you want to use it in before you can use it. 2.5 Resources for Alteryx softwware What is Alteryx? Data Cleansing in Alteryx for Beginners Integrating R in Alteryx Alteryx - Bring Your Own R Code How do I Import &amp; Union Multiple Excel Files with Alteryx The Union tool in Alteryx The unique tool in Alteryx How to Connect Alteryx to PostgreSQL 2.6 Datasets Energy Performance of Buildings Data: England and Wales Land Registry Price Paid Data(PPD) A new attribute-linked residential property price dataset for England and Wales 2011-2019 Scottish Energy Performance Certificate Register Scottish Domestic Energy Performance Certificates Scottish Non-domestic Energy Performance Certificates "],["getting-started.html", "3 Getting started 3.1 Installing packages 3.2 Loading packages 3.3 Install PostGIS and Alteryx software", " 3 Getting started 3.1 Installing packages If you have installed the below packages already, you can jump to the next step. #install.packages(&quot;data.table&quot;) #install.packages(&quot;dtplyr&quot;) 3.2 Loading packages Load the packages for todays talk library(data.table) library(dtplyr) library(&quot;sqldf&quot;) library(&quot;RPostgreSQL&quot;) library(&quot;dplyr&quot;) 3.3 Install PostGIS and Alteryx software 3.3.1 Install PostGIS 3.3.2 Install Alteryx For academics, students, nonprofits institutes, you can install the Alteryx for free through Alteryx for Good. #install.packages(&quot;data.table&quot;) #install.packages(&quot;dtplyr&quot;) Note: Once you have loaded the package successfully, there will be a check mark display before the package under your packages tab at the bottom right pane. "],["working-with-big-data-in-r.html", "4 Working with big data in R 4.1 Read in CSV files 4.2 Basic larger dataset munging/wrangling 4.3 Work with PostGIS database in R 4.4 Measure code performance 4.5 Execute R code in Alteryx", " 4 Working with big data in R 4.1 Read in CSV files 4.1.1 Read one large CSV file Read CSV file with header library(data.table) Sys.time() ## [1] &quot;2021-03-23 17:25:59 GMT&quot; ##It will take around 3 mins to read in 5,732,838 records with 105 variables tran2&lt;-fread(&quot;tranall2011_19.csv&quot;) Sys.time() ## [1] &quot;2021-03-23 17:27:08 GMT&quot; Read CSV file without header Read CSV file with the second row as header and dropping the first row epcdata13&lt;-read.csv(&quot;D_EPC_data_2020_Q3_extract_0221.csv&quot;, skip = 1) epcdata14&lt;-read.csv(&quot;D_EPC_data_2020_Q4_extract_0221.csv&quot;, skip = 1) 4.1.2 Fast reading multiple EPC csv files together in R Code for reading in EPCs in England and Wales ## assume all the unzipped EPC stored in EPC folder in D drive #x1 &lt;- list.files(path = &quot;.&quot;, pattern = NULL, all.files = FALSE, #full.names = FALSE, recursive = FALSE) #datalist &lt;- paste(&quot;D:/EPC&quot;,x1,&quot;certificates.csv&quot;,sep=&quot;/&quot;) #epcdata = data.table::rbindlist(lapply(datalist, data.table::fread, showProgress = FALSE)) Code for reading in EPCs in Scotland #datalist = list.files(pattern=&quot;*.csv&quot;) #epcdata = data.table::rbindlist(lapply(datalist, data.table::fread, skip=1,showProgress = FALSE)) 4.2 Basic larger dataset munging/wrangling 4.2.1 Select columns class(tran2) ## [1] &quot;data.table&quot; &quot;data.frame&quot; needlist&lt;-c(&quot;id&quot;,&quot;transactionid&quot;,&quot;postcode&quot;,&quot;price&quot;,&quot;dateoftransfer&quot;,&quot;propertytype&quot;,&quot;msoa11&quot;,&quot;laua&quot;,&quot;tfarea&quot;,&quot;numberrooms&quot;,&quot;priceper&quot;,&quot;CURRENT_ENERGY_EFFICIENCY&quot;,&quot;POTENTIAL_ENERGY_RATING&quot;,&quot;WALLS_ENERGY_EFF&quot;) tran2&lt;-tran2[,..needlist] head(tran2) ## id transactionid postcode price dateoftransfer propertytype msoa11 laua tfarea numberrooms priceper CURRENT_ENERGY_EFFICIENCY ## 1: 10000000 {5F2B8B60-B9D0-4F00-8561-8BBF0C991BE1} KT22 7LN 187250 2014-07-11 F E02006364 E07000210 46 2 4070.652 78 ## 2: 10000002 {5F54B81D-B8BA-2B45-E053-6B04A8C01FB0} RH4 3QR 394000 2017-10-23 T E02006373 E07000210 77 5 5116.883 60 ## 3: 10000004 {F5CB911D-B4EF-4F74-A696-1131D46A1019} KT21 2LJ 447000 2013-10-24 S E02006363 E07000210 139 5 3215.827 73 ## 4: 10000006 {47844C80-5285-8986-E050-A8C063056488} KT22 7TQ 700700 2017-01-23 D E02006364 E07000210 148 7 4734.459 62 ## 5: 10000007 {666758D7-4CCD-3363-E053-6B04A8C0D74E} KT21 2DJ 350000 2018-01-03 F E02006363 E07000210 63 4 5555.556 68 ## 6: 10000008 {288DCE29-B9CB-E510-E050-A8C06205480E} KT22 7DX 135000 2015-10-20 F E02006364 E07000210 44 2 3068.182 82 ## POTENTIAL_ENERGY_RATING WALLS_ENERGY_EFF ## 1: C Good ## 2: B Poor ## 3: B Good ## 4: B Poor ## 5: C Poor ## 6: B Good 4.2.2 Changing column names to lower case or upper case 4.2.2.1 Changing column names to lower case #setnames(tran2, tolower(names(tran2))) 4.2.2.2 Changing column names to upper case #setnames(tran2, toupper(names(tran2))) 4.2.3 Filter rows #setnames(tran2, toupper(names(tran2))) laua== 4.2.4 Add in ID column #epcdata[, epcdataid := .I] 4.2.5 Convert datatable values to uppercase #epcdata[, `:=`(add1 = toupper(address1), # add2 = toupper(address2), # add3 = toupper(address3), #add = toupper(address))] 4.2.6 Join datasets #epcdata&lt;-rbind(epcdata13,epcdata14) 4.2.7 Get unique records #sepcdata&lt;-unique(epcdata) 4.2.8 Join datasets 4.2.9 Write files #fwrite(tran2,&quot;tran2.csv&quot;) 4.3 Work with PostGIS database in R 4.3.1 Write files to PostGIS #drv &lt;- dbDriver(&quot;PostgreSQL&quot;) #con &lt;- dbConnect(drv, dbname = &quot;casa&quot;,port=5432, user=&quot;postgres&quot;,password=******) #dbWriteTable(con, &quot;tran2&quot;,value=tran2, append = TRUE, row.names = FALSE) 4.3.2 Read files from PostGIS #drv &lt;- dbDriver(&quot;PostgreSQL&quot;) #con &lt;- dbConnect(drv, dbname = &quot;casa&quot;,port=5432, user=&quot;postgres&quot;,password=******) #tran&lt;- dbGetQuery(con,&quot;select * from tran2&quot;) 4.4 Measure code performance 4.4.1 4.4.2 4.5 Execute R code in Alteryx "],["q-a.html", "Q &amp; A", " Q &amp; A "]]
